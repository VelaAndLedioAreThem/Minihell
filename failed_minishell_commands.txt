----------------------------            

----------------------------
üßæ Heredoc Edge Cases
----------------------------


----------------------------
üì¶ Export & Command Substitution
----------------------------
export T="echo segfault | grep segfault"
$T                          # Running command from exported variable

----------------------------
üß© Quoting Hell
----------------------------
p""''''w''''''''''''''''''''''''''''''''''''''d
'''''''''''''''' echo ok
''echo ok
""echo ok
""echo"" ok
""'echo'"" ok
'e'cho 42
"./"ls
"./""ls"
"./"''"ls"

----------------------------
üß® Redirection Edge Case
----------------------------
>| echo sure               # Bash supports this as 'clobber', but not POSIX

----------------------------
üö™ Exit Statement with Quoted Value
----------------------------
exit 123"123"              # Should become: exit 123123

----------------------------
‚ùì Ambiguous/Nonexistent Commands
----------------------------
env what                   # 'what' is likely not a command
./ls                       # Only works if `ls` is in current directory
"./"ls
"./""ls"
"./"''"ls"

----------------------------
üîó Pipelines and Subshells
----------------------------
((echo 1) | (echo 2) | (echo 3 | (echo 4)))

echo 1 | (echo 2 || echo 3 && echo 4) || echo 5 | echo 6

echo 1 | (grep 1) | cat | (wc -l)

(/bin/echo 1 | /bin/echo 2 && ((/bin/echo 3 | /bin/echo 3) | (/bin/echo 4 | /bin/echo 4)))

----------------------------
üßÆ Heavyweight AWK Use
----------------------------
awk 'BEGIN{for(i=1;i<=10;i++){for(j=1;j<=10;j++){printf("%4d ",i*j)} printf("\n")}}' /dev/null | tail -n 10

awk 'BEGIN{for(i=1;i<=1000000;i++)print int(i)}' | awk '{sum+=$1} END {print sum/NR}'

----------------------------
‚ùå PATH Unset Scenarios
----------------------------
unset PATH
cd /bin
ls

unset PATH
cd /bin/../bin/
ls


touch tmp_out
/bin/echo 42 >tmp_o*t*
rm -f "tmp_out*"




touch tmp_out1
touch tmp_out2
/bin/echo 42 >tmp_out*
rm -f "tmp_out*"



/usr/bin/printf "%s\n" "Mak"'e'*'*' | sort

/usr/bin/printf "%s\n" "Mak"'e'** | sort

/usr/bin/printf "%s\n" ***"Mak"'e'** | sort

/usr/bin/printf "%s\n" "."* | sort

/usr/bin/printf "%s\n" *"." | sort

/usr/bin/printf "%s\n" *"."* | sort

/usr/bin/printf "%s\n" "*" | sort

/usr/bin/printf "%s\n" '*' | sort



touch "*1"
/usr/bin/printf "%s\n" "*"* | sort
rm "*1"




echo '$='

echo "$""$"

echo $"$"

echo $"42$"

echo "$"$

echo $'$'

echo '$'$

echo '$HO ME'

echo $"HOME"

echo $'HOME'

echo ""$PWD""

echo ''$PWD''

echo $USE"R"$HOME

echo $"HOME"$USER

echo $"HOM"E$USER

echo $"'HOM'E"$USER

echo $'HOM'E$USER

echo $"HOME"

echo '$USER'


export X="  A  B  "
/bin/echo "1"$X'2'

export X=" A  B  "
/bin/echo "1"$X'2'

export X="A  B  "
/bin/echo "1"$X'2'

export X="  A  B "
/bin/echo "1"$X'2'

export X="  A  B"
/bin/echo "1"$X'2'

export X="  A B  "
/bin/echo "1"$X'2'

export X="  AB  "
/bin/echo "1"$X'2'

export X="  A  B  "
/bin/echo $X'2'

export X="  A  B  "
/bin/echo $X"1"

export X=""
/bin/echo "1"$X'2'

export X=" "
/bin/echo "1"$X'2'

export X="   "
/bin/echo "1"$X'2'

export X="  A  B  "
/bin/echo ?$X'2'

export X="  A  B  "
/bin/echo "1"$X?

export X="  A  B  "
/bin/echo "1"$X2?




ls | cat << stop | ls -la | cat << stop1 | ls | cat << stop2 | ls -la > > out | cat << stop3
fe
wf
fwe
f
stop
dw
stop1
dwasd
stop2
cat Makefile | ls > out
cat out
/bin/rm -f out

ls | cat << stop | grep "asd"
is this good
stop

ls | cat << stop | ls -la | cat << stop1
12
32232
23
stop
awdaw
daswd
stop1

ls | cat << stop | ls -la | cat << stop1 | ls | cat << stop2 | ls -la | cat << stop3
$USER
ad
as $HOME
stop
awd
wf$PWDdqwdwqd
stop1
das
das
stop2
dsq
wd
wf$PWDdqwdwqd
stop3

ls | cat << stop | ls -la | cat << stop1 | ls | cat << stop2 | ls -la > out | cat << 'stop3'
$USER
ad
stop
dsa
stop1
sad
stop2
as $HOME
stop3
/bin/rm -f out


/bin/env | grep "_="



echo ''totally logical''

echo ""'totally logical'""

echo echo"1"


echo text"$USER"


echo \$USER

echo \\$USER

echo \\\$USER

echo $"HOME"

echo $"42$"

echo """"""""$USER""""""""


echo "cd ~"

echo ""$?""

echo $?"42"

echo ''$?''"42"

echo '"$USER"'
echo "$/ $/"

echo $/"$/"

echo '$/'
export T=ech


echo $T'o '
